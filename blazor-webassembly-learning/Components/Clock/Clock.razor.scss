//:root {
//  --minute-rotation: 0deg;
//}

ul {
  list-style: none;
}

.clock {
  font-family: "Chivo Mono", monospace;
  font-optical-sizing: auto;
  font-weight: normal;
  font-style: normal;
  
  aspect-ratio: 1;
  width: 50%;
  background-color: gray;
  
  display: grid;
  
  align-items: center;
  justify-items: center;
  
} 

.clock * {
  grid-row: 1;
  grid-column: 1;
  //align-self: center;
}

.minute-face {
  z-index: 3;
}

.hour-face {
  z-index: 2;
}

@mixin clock-hand {
  transition: all 0.066s cubic-bezier(0.25,0.10,0.36,1.65);
  aspect-ratio: 1;
}

.no-transition {
  transition: none !important;
}

@mixin small-clock-element {
  @include clock-hand;
  width: 20%;
}

@mixin medium-clock-element {
  width: 40%;
}

$inner-face-diameter: 30%;

$clock-hand-separator-colour: rgba(0, 0, 0, 50%);

.clock-hand-separator {
  z-index: 4;
  width: 100%;
  aspect-ratio: 1;
  // TODO: Complete gradient to match glass cover on watch
  background-image: radial-gradient(
                  $clock-hand-separator-colour 16.66%, 
                  transparent 0, transparent 30%,
                  $clock-hand-separator-colour 0, $clock-hand-separator-colour 100%
  );
}

// TODO: Decouple element sizing from parent - look into removing clock element?
.clock-circular-face {
    @include small-clock-element;
  
    border-radius: 100%;
    background-color: rgb(20, 20, 20);
    //background-image: conic-gradient(black, white);
  
  aspect-ratio: 1;
  //width: 50%;

    width: $inner-face-diameter;
    //height: 50%;
    //transform: rotate(0deg);
}

.block-clock-face {
  @include medium-clock-element;
  
  display: flex;
  align-items: center;
  justify-content: center;
  
  width: 100%;
  height: 100%;
  
  //background-color: green;
}

.block-clock-face div {
  width: 1.25%;
  height: 100%;
  //background-color: black;
  background-image: linear-gradient(
                  0deg, transparent 15%, 
                  white 0, white 50%, 
                  black 0, black 85%, 
                  white 0, white 100%
  );
}


.clock-circular-face ul {
  text-align: center;
}

$number-width: 25%;

.clock-circular-face ul li {
  display: block;
  position: absolute;
  text-align: center;
  width: $number-width; 
  aspect-ratio: 1;
  align-content: center;
  justify-content: center;

  color: white;
  font-size: 0.75vw;
}

@mixin place-clock-labels ($clock-name, $label-count: 12, $label-width: 20%, $circle-radius: 45%, $relative-label-rotation: false) {
  @for $i from 1 through $label-count {
    
    .clock-#{$clock-name} ul li:nth-child(#{$i}){
      /* Find where in the circle to place the element, Circle radius and constant offset */
      bottom: calc(((

      cos(pi / (#{$label-count} / 2)

      * (#{$i})) * #{$circle-radius})

      + (50% - 0.5em)));

      left: calc(((
      sin(pi / (#{$label-count} / 2)
      * (#{$i})) * #{$circle-radius})
      + (50% - (#{$label-width} / 2))));

      @if ($relative-label-rotation != false) {
        transform: rotate(calc((calc(360deg / #{$label-count}) * #{$i}) + #{$relative-label-rotation}));
      }

    }
  }
}


@mixin place-inverted-clock-labels($clock-name, $label-count: 12, $label-width: 20%, $circle-radius: 45%, $relative-label-rotation: false) {
  @for $i from 1 through $label-count {

    // Place from second to last item to first, looping back to the final item to be placed last
    $li-index: ($label-count - $i);
    @if($li-index == 0) {
      $li-index: $label-count;
    }
    
    .clock-#{$clock-name} ul li:nth-child(#{$li-index}){
      /* Find where in the circle to place the element, Circle radius and constant offset */
      /* 1 degree offset for placement */
      bottom: calc(((

      (cos((pi / (#{$label-count} / 2)) 

            * (#{$i})) * #{$circle-radius}) * -1)

      + (50% - (#{$label-width} / 2))));

      left: calc(((
      (sin((pi / (#{$label-count} / 2)) 
            * (#{$i})) * #{$circle-radius}) * -1)
      + (50% - (#{$label-width} / 2))));

      @if ($relative-label-rotation != false) {
        transform: rotate(calc((calc(360deg / #{$label-count}) * #{$i}) + #{$relative-label-rotation} + 180deg));
      }

    }
  }
}

@include place-inverted-clock-labels(circular-face, 12, $number-width, 45%, 180deg);

//@for $i from 1 through 12 {
//  .clock-circular-face ul li:nth-child(#{$i}){
//    color: white;
//    @if($i % 3 == 0) {
//      font-size: 13px;
//    } @else {
//      font-size: 10px;
//    }
//
//  }
//}